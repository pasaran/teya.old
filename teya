#!/usr/bin/env node

// vim: set filetype=javascript:

//  ---------------------------------------------------------------------------------------------------------------  //

var nopt = require( 'nopt' );

var teya = require( './lib/teya.js' );
require( './lib/actions.js' );

//  ---------------------------------------------------------------------------------------------------------------  //

var options = get_options();

if ( options.help ) {
    help();

} else if ( options.version ) {
    version();

} else if ( options.compile ) {
    var files = get_teya_files( options );
    for ( var i = 0, l = files.length; i < l; i++ ) {
        var filename = files[ i ];

        teya.compile_to_file( filename );
    }

} else if ( options.run ) {
    var files = get_teya_files( options );
    for ( var i = 0, l = files.length; i < l; i++ ) {
        var filename = files[ i ];

        var result = teya.run( filename, options.run, options.data );
        console.log( result );
    }

} else if ( options.ast ) {
    var files = get_teya_files( options );
    for ( var i = 0, l = files.length; i < l; i++ ) {
        var filename = files[ i ];

        var ast = teya.parse( filename );
        console.log( ast.to_string() );
    }

} else {
    var files = get_teya_files( options );
    for ( var i = 0, l = files.length; i < l; i++ ) {
        var filename = files[ i ];

        var out = teya.compile( filename );
        console.log( out );
    }

}

//  ---------------------------------------------------------------------------------------------------------------  //

function get_options() {
    var options = nopt(
        {
            'help': Boolean,
            'version': Boolean,
            'ast': Boolean,
            'compile': Boolean,
            'run': String,
            'data': String,
        },
        {
            'h': '--help',
            'v': '--version',
            'a': '--ast',
            'c': '--compile',
            'r': '--run',
            'd': '--data',
        }
    );

    return options;
}

function get_teya_files( options ) {
    var files = options.argv.remain;
    var teya_files = [];

    for ( var i = 0, l = files.length; i < l; i++ ) {
        var filename = files[ i ];
        if ( /\.teya$/.test( filename ) ) {
            teya_files.push( filename );
        }
    }

    if ( !teya_files.length ) {
        help();

        process.exit( 1 );
    }

    return teya_files;
}

//  ---------------------------------------------------------------------------------------------------------------  //

function help() {
    console.log( 'USAGE:');
    console.log( '' );
    console.log( '    teya --help' );
    console.log( '    teya --version' );
    console.log( '' );
    console.log( '    teya --parse foo.teya' );
    console.log( '    teya --ast foo.teya' );
    console.log( '    teya --compile foo.teya bar.teya' );
    console.log( '    teya foo.teya' );
    console.log( '    teya --run test --data "{ foo: 42 }" foo.teya' );
    console.log( '' );
};

function version() {
    console.log( require( './package.json' ).version );
}

//  ---------------------------------------------------------------------------------------------------------------  //

