module
    function( jpath ) {
        var m0 = {};

        var %vars:list;

        function init_vars( x0 ) {
            %vars
        }

        %defs

        module.exports = function( x0, id ) {
            init_vars( x0 );

            return m0[ id ]( x0 );
        };
    }

def_template
    function %{name}() {
        %body
    }

def_var
    var %.:name = %value;

def_var :name
    v%{vid}_%normalize_name()

def_var :list
    %.:name

#   ---------------------------------------------------------------------------------------------------------------   #

block
    %defs

    %exprs

#   ---------------------------------------------------------------------------------------------------------------   #

if [ this.is_inline() ]
    ( %condition ) ? %then : %elses

else
    %body

#   ---------------------------------------------------------------------------------------------------------------   #

value
    %value

#   ---------------------------------------------------------------------------------------------------------------   #

jpath
    no.jpath( '%teya()', x0 )

#   ---------------------------------------------------------------------------------------------------------------   #

inline_binop
    %left %op %right

inline_unop
    %op%left

inline_ternary
    ( %condition ) ? %then : %else

inline_number
    %value

inline_subexpr
    ( %expr )

#   ---------------------------------------------------------------------------------------------------------------   #

inline_string
    %value

string_literal
    "%stringify()"

string_expr
    %expr

#   ---------------------------------------------------------------------------------------------------------------   #

inline_var
    %name

#   ---------------------------------------------------------------------------------------------------------------   #

inline_func
    %name( %args )

inline_func_arg
    %value

#   ---------------------------------------------------------------------------------------------------------------   #

true
    true

false
    false

#   ---------------------------------------------------------------------------------------------------------------   #

