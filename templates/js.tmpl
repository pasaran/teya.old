module
    var m0 = {};

    %vars:define

    function init_vars( x0 ) {
        %vars:init
    }

    %defs

    module.exports = function( x0, id ) {
        init_vars( x0 );

        return m0[ id ]( x0 );
    };

module_vars :define [ !ast.is_empty() ]
    var %.:list;

def_template
    m0[ "%name" ] = function %{name}() {
        %body
    };

def_var :init
    %.:name = %value;

def_var :name
    v%{vid}_%normalize_name()

def_var :list
    %.:name

#   ---------------------------------------------------------------------------------------------------------------   #

block
    %defs

    %exprs

#   ---------------------------------------------------------------------------------------------------------------   #

if [ ast.is_inline() ]
    ( %condition ) ? %then : %elses

else
    %body

if
    if ( %condition ) %then:if_body %elses:if_body

else_if :if_body
    else if ( %condition ) %body:if_body

* :if_body
    {
        %body
    }

#   ---------------------------------------------------------------------------------------------------------------   #

value
    %value

#   ---------------------------------------------------------------------------------------------------------------   #

jpath
    no.jpath( '%teya()', x0 )

#   ---------------------------------------------------------------------------------------------------------------   #

inline_binop
    %left %op %right

inline_unop
    %op%left

inline_ternary
    ( %condition ) ? %then : %else

inline_number
    %value

inline_subexpr
    ( %expr )

#   ---------------------------------------------------------------------------------------------------------------   #

inline_string
    %value

string_literal
    "%stringify()"

string_expr
    %expr

#   ---------------------------------------------------------------------------------------------------------------   #

inline_var
    %name

#   ---------------------------------------------------------------------------------------------------------------   #

inline_func
    %name( %args )

inline_func_arg
    %value

#   ---------------------------------------------------------------------------------------------------------------   #

true
    true

false
    false

#   ---------------------------------------------------------------------------------------------------------------   #

