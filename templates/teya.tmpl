module
    %vars

    %defs

def_template
    %name %.:args
        %body

def_template :args [ ast.args && !ast.args.is_empty() ]
    ( %args )

#   ---------------------------------------------------------------------------------------------------------------   #

def_var
    %name = %value

#   ---------------------------------------------------------------------------------------------------------------   #

def_func
    func %name( %args )
        %body

#   ---------------------------------------------------------------------------------------------------------------   #

def_arg
    %.:type%name%.:default

def_arg :default [ ast.default ]
     = %default

def_arg :type [ ast.type ]
    %type 

#   ---------------------------------------------------------------------------------------------------------------   #

block
    %args
    %defs

    %exprs

template_param
    %name: %value

#   ---------------------------------------------------------------------------------------------------------------   #

template
    %name %args
        %content

template_param
    %name: %value

#   ---------------------------------------------------------------------------------------------------------------   #

if
    if %condition
        %then
    %elses

else_if
    else if %condition
        %body

else
    else
        %body

#   ---------------------------------------------------------------------------------------------------------------   #

for
    for %selector
        %body

#   ---------------------------------------------------------------------------------------------------------------   #

with
    with %selector
        %body

#   ---------------------------------------------------------------------------------------------------------------   #

object
    {
        %body
    }

pair
    %key: %value

inline_pair
    %key: %value

#   ---------------------------------------------------------------------------------------------------------------   #

array
    [
        %body
    ]

inline_item
    %value

#   ---------------------------------------------------------------------------------------------------------------   #

value
    %value

#   ---------------------------------------------------------------------------------------------------------------   #

xml [ ast.is_empty ]
    <%name%attrs/>

xml
    <%name%attrs>
        %content

# xml_class
#     .%value
#
# xml_id
#     #%value

xml_attr
     %name=%value

#   ---------------------------------------------------------------------------------------------------------------   #

param_content
    ...

param_content_attrs
    @..

param_content_other
    $..

#   ---------------------------------------------------------------------------------------------------------------   #

subexpr
    (
        %body
    )

#   ---------------------------------------------------------------------------------------------------------------   #

jpath
    %steps

jpath_nametest
    .%name

jpath_predicate
    [ %expr ]

#   ---------------------------------------------------------------------------------------------------------------   #

inline_binop
    %left %op %right

inline_unop
    %op%left

inline_ternary
    %condition ? %then : %else

inline_number
    %value

inline_subexpr
    ( %expr )

#   ---------------------------------------------------------------------------------------------------------------   #

inline_string
    "%value"

string_literal
    %stringify()

string_expr
    { %expr }

#   ---------------------------------------------------------------------------------------------------------------   #

inline_var
    %name

#   ---------------------------------------------------------------------------------------------------------------   #

inline_func
    %name( %args )

inline_func_arg
    %value

#   ---------------------------------------------------------------------------------------------------------------   #

true
    true

false
    false

#   ---------------------------------------------------------------------------------------------------------------   #

